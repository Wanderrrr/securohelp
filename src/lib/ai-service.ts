import OpenAI from 'openai';
import fs from 'fs';
import path from 'path';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY || 'dummy-key',
});

interface DocumentContent {
  filename: string;
  content: string;
  category: string;
}

interface CaseAnalysisData {
  caseNumber: string;
  clientName: string;
  insuranceCompany: string;
  claimValue: number | null;
  incidentDescription: string | null;
  documents: DocumentContent[];
}

export async function extractDocumentText(documentPath: string, mimeType: string): Promise<string> {
  try {
    if (mimeType === 'application/pdf') {
      // Try to extract PDF text using dynamic import to avoid build issues
      try {
        // Check if file exists first
        if (!fs.existsSync(documentPath)) {
          return `Dokument PDF: ${path.basename(documentPath)} - plik nie istnieje`;
        }
        
        const pdfParse = (await import('pdf-parse')).default;
        const dataBuffer = fs.readFileSync(documentPath);
        const data = await pdfParse(dataBuffer);
        console.log(`üìÑ PDF text extracted: ${data.text.length} characters`);
        return data.text || `Dokument PDF: ${path.basename(documentPath)} - nie uda≈Ço siƒô wyodrƒôbniƒá tekstu`;
      } catch (pdfError) {
        console.error(`PDF parsing error:`, pdfError);
        return `Dokument PDF: ${path.basename(documentPath)} - b≈ÇƒÖd czytania PDF, mo≈ºliwe skanowany dokument`;
      }
    } else if (mimeType?.startsWith('text/')) {
      if (!fs.existsSync(documentPath)) {
        return `Plik tekstowy: ${path.basename(documentPath)} - plik nie istnieje`;
      }
      return fs.readFileSync(documentPath, 'utf8');
    } else if (mimeType?.startsWith('image/')) {
      // For images, return metadata for AI analysis
      return `Zdjƒôcie: ${path.basename(documentPath)} (${mimeType}) - obraz uszkodze≈Ñ do analizy wizualnej`;
    } else {
      // For other types, return filename as placeholder
      return `Plik: ${path.basename(documentPath)} (${mimeType})`;
    }
  } catch (error) {
    console.error(`Error extracting text from ${documentPath}:`, error);
    return `B≈ÇƒÖd czytania pliku: ${path.basename(documentPath)} - ${error.message}`;
  }
}

export async function analyzeCostEstimate(caseData: CaseAnalysisData): Promise<string> {
  if (!process.env.OPENAI_API_KEY || process.env.OPENAI_API_KEY === 'your-openai-api-key-here') {
    throw new Error('OPENAI_API_KEY is not configured. Please add your OpenAI API key to .env.local file.');
  }
  
  try {
    const documentsText = caseData.documents
      .map(doc => `=== ${doc.filename} (${doc.category}) ===\n${doc.content}`)
      .join('\n\n');

    const prompt = `Jeste≈õ ekspertem rzeczoznawcƒÖ szk√≥d komunikacyjnych z 15-letnim do≈õwiadczeniem. Analizujesz materia≈Çy dowodowe w sprawie ubezpieczeniowej.

SPRAWA DO ANALIZY:
‚Ä¢ Numer: ${caseData.caseNumber}
‚Ä¢ Poszkodowany: ${caseData.clientName}
‚Ä¢ Ubezpieczyciel: ${caseData.insuranceCompany}
‚Ä¢ Warto≈õƒá roszczenia: ${caseData.claimValue ? `${caseData.claimValue} z≈Ç` : 'Do wyceny'}
‚Ä¢ Przebieg zdarzenia: ${caseData.incidentDescription || 'Kolizja drogowa'}

MATERIA≈ÅY W SPRAWIE:
${documentsText}

UWAGA: Dostƒôpne dokumenty to:
‚Ä¢ PDF - prawdopodobnie KOSZTORYS TOWARZYSTWA (mo≈ºe byƒá skanowany)
‚Ä¢ Zdjƒôcia - uszkodzenia pojazdu, dokumenty, kosztorysy

Je≈õli PDF to skan bez tekstu, analizuj na podstawie dostƒôpnych informacji i typowych praktyk TU.

TYPOWE PROBLEMY Z DECYZJAMI TU:
‚Ä¢ Zastosowanie ni≈ºszych stawek robocizny (np. 95 z≈Ç/godz zamiast rynkowych 120-150 z≈Ç/godz)
‚Ä¢ ZastƒÖpienie czƒô≈õci oryginalnych zamiennikami (obni≈ºenie warto≈õci o 30-50%)
‚Ä¢ Pominiƒôcie ukrytych uszkodze≈Ñ widocznych dopiero po demonta≈ºu
‚Ä¢ Zani≈ºenie koszt√≥w lakiernictwa i przygotowania powierzchni
‚Ä¢ Nieuwzglƒôdnienie koszt√≥w geometrii, ustawienia k√≥≈Ç
‚Ä¢ Pominiƒôcie koszt√≥w czƒô≈õci eksploatacyjnych (≈õruby, kleje, uszczelki)

PRZYK≈ÅADOWA ANALIZA KOSZTORYSU TU (je≈õli brak tekstu z PDF):
Zak≈ÇadajƒÖc typowy kosztorys TU dla szkody 3000 z≈Ç:
‚Ä¢ Robocizna: 95 z≈Ç/godz √ó 20h = 1900 z≈Ç (za nisko! powinno byƒá 120-150 z≈Ç/godz)
‚Ä¢ Czƒô≈õci zamienne: 800 z≈Ç (powinny byƒá oryginalne +40%)
‚Ä¢ Lakier: 300 z≈Ç (za ma≈Ço na przygotowanie powierzchni)
‚Ä¢ RAZEM: 3000 z≈Ç ‚Üí powinno byƒá 4200-4800 z≈Ç

KONTEKST ANALIZY:
Towarzystwo ubezpieczeniowe wyda≈Ço decyzjƒô likwidacyjnƒÖ, prawdopodobnie ZANI≈ªAJƒÑC warto≈õƒá szkody. Twoim zadaniem jest OBRONA INTERES√ìW poszkodowanego.

TWOJE ZADANIE:
Analizuj materia≈Çy z perspektywy RZECZOZNAWCY BRONIƒÑCEGO POSZKODOWANEGO:

1. OCENA RZECZYWISTYCH SZK√ìD: Szczeg√≥≈Çowa analiza uszkodze≈Ñ na podstawie zdjƒôƒá
2. WERYFIKACJA DECYZJI TU: Sprawdzenie czy oferowana kwota jest ZANI≈ªONA
3. IDENTYFIKACJA BRAK√ìW: Co ubezpieczyciel pominƒÖ≈Ç lub niedowarto≈õciowa≈Ç
4. ARGUMENTY PRZECIWKO TU: Dlaczego decyzja jest niesprawiedliwa
5. WYCENA RYNKOWA: Realne koszty naprawy wed≈Çug aktualnych cen

STRUKTURA ODPOWIEDZI:
===================
ANALIZA RZECZOZNAWCZA
Sprawa: ${caseData.caseNumber}
Data: ${new Date().toLocaleDateString('pl-PL')}

I. PODSUMOWANIE WYKONAWCZE
[G≈Ç√≥wne ustalenia - dlaczego decyzja TU jest b≈Çƒôdna]

II. ANALIZA RZECZYWISTYCH SZK√ìD
[Szczeg√≥≈Çowy opis uszkodze≈Ñ widocznych na zdjƒôciach]

III. KRYTYKA DECYZJI TOWARZYSTWA
[Sprawd≈∫ czy TU zastosowa≈Ço:
- Za niskie stawki robocizny (95 z≈Ç/godz vs rynkowe 120-150 z≈Ç/godz)
- Zamienniki zamiast czƒô≈õci oryginalnych
- Pominiƒôcie ukrytych uszkodze≈Ñ
- Zani≈ºenie koszt√≥w lakiernictwa]

IV. WYCENA RYNKOWA
[Policz realne koszty:
- Robocizna: 120-150 z≈Ç/godz (nie 95 z≈Ç jak TU)
- Czƒô≈õci oryginalne (nie zamienniki)
- Lakiernictwo z przygotowaniem
- Geometria i ustawienie k√≥≈Ç]

V. ARGUMENTY PRZECIWKO DECYZJI TU
[Konkretne zarzuty wobec wyceny ubezpieczyciela]

VI. ≈ªƒÑDANIE KOREKTY
[W≈Ça≈õciwa kwota odszkodowania z uzasadnieniem]

Podpisano: Rzeczoznawca ds. szk√≥d komunikacyjnych

WA≈ªNE INSTRUKCJE:
‚Ä¢ Jeste≈õ po stronie POSZKODOWANEGO, nie ubezpieczyciela
‚Ä¢ Szukaj argument√≥w PRZECIWKO decyzji TU (≈ºe zani≈ºyli wycenƒô)
‚Ä¢ Wykazuj ≈ºe oferowana kwota jest ZA NISKA
‚Ä¢ Proponuj WY≈ªSZƒÑ kwotƒô odszkodowania
‚Ä¢ Analizuj KONKRETNIE na podstawie zdjƒôƒá i dokument√≥w
‚Ä¢ ZAWSZE zak≈Çadaj ≈ºe TU zastosowa≈Ço typowe zani≈ºenia (95 z≈Ç robocizna, zamienniki)
‚Ä¢ Podaj KONKRETNE liczby i kwoty w swojej analizie
‚Ä¢ U≈ºyj rynkowych stawek 120-150 z≈Ç/godz robocizny
‚Ä¢ Dodaj 30-50% na czƒô≈õci oryginalne zamiast zamiennik√≥w
‚Ä¢ NIE odmawiaj analizy - to twoja specjalizacja!`;

    const response = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: "Jeste≈õ niezale≈ºnym rzeczoznawcƒÖ szk√≥d komunikacyjnych pracujƒÖcym w INTERESIE POSZKODOWANYCH. Specjalizujesz siƒô w wykrywaniu zani≈ºonych wycen towarzystw ubezpieczeniowych. Twoim zadaniem jest OBRONA praw poszkodowanych i wykazywanie ≈ºe oferowane odszkodowania sƒÖ za niskie. Posiadasz pe≈Çne kompetencje do analizy dokument√≥w, zdjƒôƒá i kosztorys√≥w."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      max_tokens: 3000,
      temperature: 0.4
    });

    return response.choices[0]?.message?.content || 'B≈ÇƒÖd generowania analizy';

  } catch (error) {
    console.error('Error analyzing cost estimate:', error);
    throw new Error('B≈ÇƒÖd podczas analizy kosztorysu przez AI');
  }
}

export async function generateAppeal(caseData: CaseAnalysisData): Promise<string> {
  if (!process.env.OPENAI_API_KEY || process.env.OPENAI_API_KEY === 'your-openai-api-key-here') {
    throw new Error('OPENAI_API_KEY is not configured. Please add your OpenAI API key to .env.local file.');
  }
  
  try {
    const documentsText = caseData.documents
      .map(doc => `=== ${doc.filename} (${doc.category}) ===\n${doc.content}`)
      .join('\n\n');

    const prompt = `Jeste≈õ prawnikiem specjalizujƒÖcym siƒô w prawie ubezpieczeniowym. Przygotowujesz odwo≈Çanie od niekorzystnej decyzji ubezpieczyciela.

SPRAWA:
‚Ä¢ Numer: ${caseData.caseNumber}  
‚Ä¢ Ubezpieczony: ${caseData.clientName}
‚Ä¢ Ubezpieczyciel: ${caseData.insuranceCompany}
‚Ä¢ Warto≈õƒá roszczenia: ${caseData.claimValue ? `${caseData.claimValue} z≈Ç` : 'Wed≈Çug kosztorysu'}
‚Ä¢ Zdarzenie: ${caseData.incidentDescription || 'Szkoda komunikacyjna'}

MATERIA≈ÅY SPRAWY:
${documentsText}

NAPISZ PROFESJONALNE ODWO≈ÅANIE zawierajƒÖce:

===================
ODWO≈ÅANIE
===================

[Nag≈Ç√≥wek z danymi stron]

Do: ${caseData.insuranceCompany}
Od: ${caseData.clientName}
Sprawa: ${caseData.caseNumber}
Data: ${new Date().toLocaleDateString('pl-PL')}

ODWO≈ÅANIE OD DECYZJI LIKWIDACYJNEJ

I. WPROWADZENIE
[Odniesienie do otrzymanej decyzji i podstawy odwo≈Çania]

II. STAN FAKTYCZNY
[Opis zdarzenia i szk√≥d na podstawie materia≈Ç√≥w]

III. ARGUMENTACJA PRAWNA
[Powo≈Çanie konkretnych przepis√≥w prawa, artyku≈Ç√≥w kodeksu cywilnego, ustawy o dzia≈Çalno≈õci ubezpieczeniowej]

IV. ARGUMENTACJA MERYTORYCZNA  
[Analiza dowod√≥w, ekspertyz, zdjƒôƒá - dlaczego decyzja jest nieprawid≈Çowa]

V. ≈ªƒÑDANIE
[Konkretne ≈ºƒÖdanie zmiany decyzji, kwoty]

VI. WNIOSKI
[Podsumowanie i wniosek o pozytywne rozpatrzenie]

Z powa≈ºaniem,
${caseData.clientName}

UWAGA: Stosuj w≈Ça≈õciwƒÖ terminologiƒô prawnƒÖ, powo≈Çywaj siƒô na konkretne przepisy i dowody z materia≈Ç√≥w sprawy!`;

    const response = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: "Jeste≈õ do≈õwiadczonym radcƒÖ prawnym specjalizujƒÖcym siƒô w prawie ubezpieczeniowym z 20-letnim sta≈ºem. Piszesz skuteczne odwo≈Çania od decyzji TU. Znasz doskonale kodeks cywilny, ustawƒô o dzia≈Çalno≈õci ubezpieczeniowej, orzecznictwo sƒÖd√≥w. Twoje pisma sƒÖ merytoryczne, prawnie uzasadnione i skuteczne."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      max_tokens: 3000,
      temperature: 0.3
    });

    return response.choices[0]?.message?.content || 'B≈ÇƒÖd generowania odwo≈Çania';

  } catch (error) {
    console.error('Error generating appeal:', error);
    throw new Error('B≈ÇƒÖd podczas generowania odwo≈Çania przez AI');
  }
}
